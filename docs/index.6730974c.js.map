{"mappings":"AAAO,IC0BMA,ECfPC,ECRFC,ECuKAC,EAQEC,EAcFC,EJhMSC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,6ECOGC,EAAOC,EAAKC,OAEtB,IAAIC,KAAKD,EAAOD,EAAIE,GAAKD,EAAMC,UAAAA,WAUrBC,EAAWC,GAAAA,IACtBC,EAAaD,EAAKC,WAClBA,GAAYA,EAAWC,YAAYF,YE+BxBG,EAAYC,EAAMP,EAAOQ,EAAKC,EAAKC,GAAAA,IAG5CC,EAAAA,CACLJ,KAAAA,EACAP,MAAAA,EACAQ,IAAAA,EACAC,IAAAA,EAAAA,IACW,KAAAG,GACF,KAAAC,IACD,EAAAC,IACF,KAAAC,SAAA,EAKIC,IACE,KAAAC,IACA,KACZC,iBAAAA,EAAaF,IACU,MAAZN,IAAqBnB,EAAUmB,UAGtB,MAAjBpB,EAAQqB,OAAerB,EAAQqB,MAAMA,GAElCA,WAOQQ,EAASnB,UACjBA,EAAMoB,kBC3EEC,EAAUrB,EAAOsB,QAC3BtB,MAAQA,EAAAA,KACRsB,QAAUA,WAyEAC,EAAcZ,EAAOa,GAAAA,GAClB,MAAdA,EAAAA,OAEIb,EAAAA,GACJY,EAAcZ,EAAAA,GAAeA,EAAAA,GAAAA,IAAwBc,QAAQd,GAAS,GACtE,SAAA,IAGAe,EACGF,EAAab,EAAAA,IAAgBgB,OAAQH,IAAAA,GAG5B,OAFfE,EAAUf,EAAAA,IAAgBa,KAEa,MAAhBE,EAAAA,IAAAA,OAIfA,EAAAA,6BASKf,EAAMJ,KAAqBgB,EAAcZ,GAAS,cAuCxDiB,EAAwBjB,GAAjC,IAGWV,EACJ4B,EAAAA,GAHyB,OAA1BlB,EAAQA,EAAAA,KAA8C,MAApBA,EAAAA,IAA0B,KAChEA,EAAAA,IAAaA,EAAAA,IAAiBmB,KAAO,KAC5B7B,EAAI,EAAGA,EAAIU,EAAAA,IAAgBgB,OAAQ1B,IAAAA,GAE9B,OADT4B,EAAQlB,EAAAA,IAAgBV,KACO,MAAd4B,EAAAA,IAAoB,CACxClB,EAAAA,IAAaA,EAAAA,IAAiBmB,KAAOD,EAAAA,iBAKhCD,EAAwBjB,aAoCjBoB,EAAcC,KAE1BA,EAAAA,MACAA,EAAAA,KAAAA,IACDxC,EAAcyC,KAAKD,KAClBE,EAAAA,OACFxC,IAAiBJ,EAAQ6C,sBAEzBzC,EAAeJ,EAAQ6C,oBACN1C,GAAOyC,YAKjBA,QAAAA,IACJE,EACIF,EAAAA,IAAyB1C,EAAcmC,QAC9CS,EAAQ5C,EAAc6C,MAAAA,SAAMC,EAAGC,UAAMD,EAAAA,IAAAA,IAAkBC,EAAAA,IAAAA,OACvD/C,EAAAA,GAGA4C,EAAMI,MAAAA,SAAKR,GApGb,IAAyBS,EAMnBC,EACEC,EANHhC,EACHiC,EACAC,EAkGKb,EAAAA,MAnGLY,GADGjC,GADoB8B,EAqGQT,GAAAA,KAAAA,KAlG/Ba,EAAYJ,EAAAA,OAGRC,EAAAA,IACEC,EAAW7C,EAAAA,GAAWa,IAAAA,IACPA,EAAAA,IAAkB,EAEvCmC,EACCD,EACAlC,EACAgC,EACAF,EAAAA,SAAAA,IACAI,EAAUE,gBACU,MAApBpC,EAAAA,IAAAA,CAA4BiC,GAAU,KACtCF,EACU,MAAVE,EAAiBrB,EAAcZ,GAASiC,EACxCjC,EAAAA,KAEDqC,EAAWN,EAAa/B,GAEpBA,EAAAA,KAAciC,GACjBhB,EAAwBjB,iBCtHXsC,EACfJ,EACAK,EACAC,EACAC,EACAC,EACAC,EACAC,EACAb,EACAE,EACAY,GAVD,IAYKvD,EAAGwD,EAAGd,EAAUe,EAAYC,EAAQC,EAAeC,EAInDC,EAAeV,GAAkBA,EAAAA,KAA6BxD,EAE9DmE,EAAoBD,EAAYnC,WAEpCwB,EAAAA,IAAAA,GACKlD,EAAI,EAAGA,EAAIiD,EAAavB,OAAQ1B,IAAAA,GAgDlB,OA5CjByD,EAAaP,EAAAA,IAAyBlD,GADrB,OAFlByD,EAAaR,EAAajD,KAAAA,kBAEOyD,EACW,KAAA,iBAMpCA,GAAAA,iBACAA,GAAAA,iBAEAA,EAEoCpD,EAC1C,KACAoD,EACA,KACA,KACAA,GAESM,MAAMC,QAAQP,GACmBpD,EAC1Ca,EAAAA,CACEC,SAAUsC,GACZ,KACA,KACA,MAESA,EAAAA,IAAoB,EAKapD,EAC1CoD,EAAWnD,KACXmD,EAAW1D,MACX0D,EAAWlD,IACX,KACAkD,EAAAA,KAG0CA,GAAAA,CAAAA,GAS5CA,EAAAA,GAAqBP,EACrBO,EAAAA,IAAoBP,EAAAA,IAAwB,EAS9B,QAHdR,EAAWmB,EAAY7D,KAIrB0C,GACAe,EAAWlD,KAAOmC,EAASnC,KAC3BkD,EAAWnD,OAASoC,EAASpC,KAE9BuD,EAAY7D,QAAAA,WAIPwD,EAAI,EAAGA,EAAIM,EAAmBN,IAAK,CAAA,IACvCd,EAAWmB,EAAYL,KAKtBC,EAAWlD,KAAOmC,EAASnC,KAC3BkD,EAAWnD,OAASoC,EAASpC,KAC5B,CACDuD,EAAYL,QAAAA,QAGbd,EAAW,KAObG,EACCD,EACAa,EALDf,EAAWA,GAAYhD,EAOtB0D,EACAC,EACAC,EACAb,EACAE,EACAY,GAGDG,EAASD,EAAAA,KAEJD,EAAIC,EAAWjD,MAAQkC,EAASlC,KAAOgD,IACtCI,IAAMA,EAAAA,IACPlB,EAASlC,KAAKoD,EAAK5B,KAAKU,EAASlC,IAAK,KAAMiD,GAChDG,EAAK5B,KAAKwB,EAAGC,EAAAA,KAAyBC,EAAQD,IAGjC,MAAVC,GACkB,MAAjBC,IACHA,EAAgBD,GAAAA,mBAITD,EAAWnD,MACM,MAAxBmD,EAAAA,KACAA,EAAAA,MAAyBf,EAAAA,IAEzBe,EAAAA,IAAsBd,EAASsB,EAC9BR,EACAd,EACAC,GAGDD,EAASuB,EACRtB,EACAa,EACAf,EACAmB,EACAH,EACAf,GAcGY,GAAAA,WAAeL,EAAe5C,KAAAA,mBAIjB4C,EAAe5C,OAQhC4C,EAAAA,IAA0BP,GAT1BC,EAAUuB,MAAAA,IAYXxB,GACAD,EAAAA,KAAiBC,GACjBA,EAAOxC,YAAcyC,IAIrBD,EAASrB,EAAcoB,QAIzBQ,EAAAA,IAAsBS,EAGjB3D,EAAI8D,EAAmB9D,KACL,MAAlB6D,EAAY7D,KAAAA,mBAEPkD,EAAe5C,MACC,MAAvBuD,EAAY7D,GAAAA,KACZ6D,EAAY7D,GAAAA,KAAWkD,EAAAA,MAKvBA,EAAAA,IAA0B5B,EAAc6B,EAAgBnD,EAAI,IAG7DoE,EAAQP,EAAY7D,GAAI6D,EAAY7D,KAAAA,GAKlC4D,EAAAA,IACE5D,EAAI,EAAGA,EAAI4D,EAAKlC,OAAQ1B,IAC5BqE,EAAST,EAAK5D,GAAI4D,IAAO5D,GAAI4D,IAAO5D,aAK9BiE,EAAgBR,EAAYd,EAAQC,GAA7C,IACU0B,EACJ5D,MADI4D,EAAM,EAAGA,EAAMb,EAAAA,IAAqB/B,OAAQ4C,KAChD5D,EAAQ+C,EAAAA,IAAqBa,MAMhC5D,EAAAA,GAAgB+C,EAGfd,EAAAA,mBADUjC,EAAMJ,KACP2D,EAAgBvD,EAAOiC,EAAQC,GAE/BsB,EACRtB,EACAlC,EACAA,EACA+C,EAAAA,IACA/C,EAAAA,IACAiC,WAMGA,WAsBCuB,EACRtB,EACAa,EACAf,EACAmB,EACAH,EACAf,GAND,IAQK4B,EAuBGC,EAAiBhB,EAAAA,QAAAA,IAtBpBC,EAAAA,IAIHc,EAAUd,EAAAA,IAMVA,EAAAA,SAAAA,OACM,GACM,MAAZf,GACAgB,GAAUf,GACW,MAArBe,EAAOvD,WAEPsE,EAAO,GAAc,MAAV9B,GAAkBA,EAAOxC,aAAeyC,EAClDA,EAAU8B,YAAYhB,GACtBa,EAAU,SACJ,KAGDC,EAAS7B,EAAQa,EAAI,GACxBgB,EAASA,EAAOG,cAAgBnB,EAAIK,EAAYnC,OACjD8B,GAAK,EAAA,GAEDgB,GAAUd,EAAAA,MACPe,EAGR7B,EAAUgC,aAAalB,EAAQf,GAC/B4B,EAAU5B,kBAOR4B,EACMA,EAEAb,EAAOiB,qBCnTTE,EAASC,EAAOvE,EAAK4D,SACzB5D,EAAI,GACPuE,EAAMC,YAAYxE,EAAK4D,GAEvBW,EAAMvE,GADa,MAAT4D,EAAAA,GAAAA,iBAEOA,GAAqBvE,EAAmBoF,KAAKzE,GACjD4D,EAEAA,EAAAA,cAYCY,EAAYE,EAAKC,EAAMf,EAAOgB,EAAU9B,GAAjD,IACF+B,EAEJC,EAAG,GACkB,UADdH,EAAAA,GACc,iBAATf,EACVc,EAAIH,MAAMQ,QAAUnB,MACd,CAAA,GACiB,iBAAZgB,IACVF,EAAIH,MAAMQ,QAAUH,EAAAA,IAGjBA,EAAAA,IACED,KAAQC,EACNhB,GAASe,KAAQf,GACtBU,EAASI,EAAIH,MAAOI,EAAAA,IAAM,GAKzBf,EAAAA,IACEe,KAAQf,EACPgB,GAAYhB,EAAMe,KAAUC,EAASD,IACzCL,EAASI,EAAIH,MAAOI,EAAMf,EAAMe,SAOhC,GAIKK,MAJDL,EAAK,IAAA,MAAcA,EAAK,GAChCE,EAAaF,KAAUA,EAAOA,EAAKM,QAAAA,WAAAA,KAGJN,EAA3BA,EAAKK,gBAAiBN,EAAYC,EAAKK,cAAcnG,MAAM,GACnD8F,EAAK9F,MAAM,GAElB6F,EAAIQ,IAAYR,EAAIQ,EAAAA,IACzBR,EAAIQ,EAAWP,EAAOE,GAAcjB,EAEhCA,EACEgB,GAEJF,EAAIS,iBAAiBR,EADLE,EAAaO,EAAoBC,EACbR,GAIrCH,EAAIY,oBAAoBX,EADRE,EAAaO,EAAoBC,EACVR,QAElC,GAKoD,4BALhDF,EAAoC,CAAA,GAC1C7B,EAIH6B,EAAOA,EAAKM,QAAAA,aAAAA,KAA2BA,QAAAA,SAAAA,UACjC,GAQNN,SAPAA,GAAAA,SACAA,GAAAA,SACAA,GAAAA,aAGAA,GAAAA,aACAA,GACAA,KAAQD,EAAAA,IAGPA,EAAIC,GAAiB,MAATf,EAAAA,GAAqBA,QAE3BkB,EACL,MAAOS,uBAUC3B,IAGD,MAATA,KAAAA,IACCA,GAAAA,MAAoBe,EAAK,IAAA,MAAcA,EAAK,IAE7CD,EAAIc,aAAab,EAAMf,GAEvBc,EAAIe,gBAAgBd,cAUdU,EAAWE,QACdL,EAAWK,EAAExF,MAAAA,GAAcjB,EAAQ4G,MAAQ5G,EAAQ4G,MAAMH,GAAKA,YAG3DH,EAAkBG,QACrBL,EAAWK,EAAExF,MAAAA,GAAajB,EAAQ4G,MAAQ5G,EAAQ4G,MAAMH,GAAKA,YCpInDjD,EACfD,EACAsD,EACAxD,EACAU,EACAC,EACAC,EACAb,EACAE,EACAY,GATD,IAWKe,EAoBEvC,EAAGoE,EAAOC,EAAUC,EAAUC,EAAUC,EACxCC,EAKAC,EACAC,EAqIAzD,EA/JL0D,EAAUT,EAAS5F,KAAAA,QAAAA,IAIhB4F,EAASjF,YAAAA,OAAkC,KAGpB,MAAvByB,EAAAA,MACHa,EAAcb,EAAAA,IACdC,EAASuD,EAAAA,IAAgBxD,EAAAA,IAEzBwD,EAAAA,IAAsB,KACtB5C,EAAAA,CAAqBX,KAGjB2B,EAAMjF,EAAAA,MAAgBiF,EAAI4B,OAG9BzB,EAAO,GAAsB,mBAAXkC,EAAuB,CAAA,GAEpCH,EAAWN,EAASnG,MAKpB0G,GADJnC,EAAMqC,EAAQC,cACQxD,EAAckB,EAAAA,KAChCoC,EAAmBpC,EACpBmC,EACCA,EAAS1G,MAAMoE,MACfG,EAAAA,GACDlB,EAGCV,EAAAA,IAEH6D,GADAxE,EAAImE,EAAAA,IAAsBxD,EAAAA,KAAAA,GAC0BX,EAAAA,KAAAA,cAGjC4E,GAAWA,EAAQE,UAAUC,OAE/CZ,EAAAA,IAAsBnE,EAAI,IAAI4E,EAAQH,EAAUE,IAGhDR,EAAAA,IAAsBnE,EAAI,IAAIX,EAAUoF,EAAUE,GAClD3E,EAAEd,YAAc0F,EAChB5E,EAAE+E,OAASC,GAERN,GAAUA,EAASO,IAAIjF,GAE3BA,EAAEhC,MAAQyG,EACLzE,EAAEkF,QAAOlF,EAAEkF,MAAAA,IAChBlF,EAAEV,QAAUqF,EACZ3E,EAAAA,IAAmBqB,EACnB+C,EAAQpE,EAAAA,KAAAA,EACRA,EAAAA,IAAAA,IAImB,MAAhBA,EAAAA,MACHA,EAAAA,IAAeA,EAAEkF,OAEsB,MAApCN,EAAQO,2BACPnF,EAAAA,KAAgBA,EAAEkF,QACrBlF,EAAAA,IAAelC,EAAAA,GAAWkC,EAAAA,MAG3BlC,EACCkC,EAAAA,IACA4E,EAAQO,yBAAyBV,EAAUzE,EAAAA,OAI7CqE,EAAWrE,EAAEhC,MACbsG,EAAWtE,EAAEkF,MAGTd,EAEkC,MAApCQ,EAAQO,0BACgB,MAAxBnF,EAAEoF,oBAEFpF,EAAEoF,qBAGwB,MAAvBpF,EAAEqF,mBACLrF,EAAAA,IAAmBC,KAAKD,EAAEqF,uBAErB,CAAA,GAE+B,MAApCT,EAAQO,0BACRV,IAAaJ,GACkB,MAA/BrE,EAAEsF,2BAEFtF,EAAEsF,0BAA0Bb,EAAUE,IAIpC3E,EAAAA,KAC0B,MAA3BA,EAAEuF,wBAAAA,IACFvF,EAAEuF,sBACDd,EACAzE,EAAAA,IACA2E,IAEFR,EAAAA,MAAuBxD,EAAAA,IACtB,CACDX,EAAEhC,MAAQyG,EACVzE,EAAEkF,MAAQlF,EAAAA,IAENmE,EAAAA,MAAuBxD,EAAAA,MAAoBX,EAAAA,KAAAA,GAC/CA,EAAAA,IAAWmE,EACXA,EAAAA,IAAgBxD,EAAAA,IAChBwD,EAAAA,IAAqBxD,EAAAA,IACrBwD,EAAAA,IAAmBqB,SAAAA,SAAQ7G,GACtBA,IAAOA,EAAAA,GAAgBwF,MAExBnE,EAAAA,IAAmBL,QACtBe,EAAYT,KAAKD,SAGZ0C,EAGsB,MAAzB1C,EAAEyF,qBACLzF,EAAEyF,oBAAoBhB,EAAUzE,EAAAA,IAAc2E,GAGnB,MAAxB3E,EAAE0F,oBACL1F,EAAAA,IAAmBC,MAAAA,WAClBD,EAAE0F,mBAAmBrB,EAAUC,EAAUC,MAK5CvE,EAAEV,QAAUqF,EACZ3E,EAAEhC,MAAQyG,EACVzE,EAAEkF,MAAQlF,EAAAA,KAELuC,EAAMjF,EAAAA,MAAkBiF,EAAI4B,GAEjCnE,EAAAA,KAAAA,EACAA,EAAAA,IAAWmE,EACXnE,EAAAA,IAAea,EAEf0B,EAAMvC,EAAE+E,OAAO/E,EAAEhC,MAAOgC,EAAEkF,MAAOlF,EAAEV,SAGnCU,EAAEkF,MAAQlF,EAAAA,IAEe,MAArBA,EAAE2F,kBACLtE,EAAgBvD,EAAOA,EAAAA,GAAWuD,GAAgBrB,EAAE2F,oBAGhDvB,GAAsC,MAA7BpE,EAAE4F,0BACfrB,EAAWvE,EAAE4F,wBAAwBvB,EAAUC,IAK5CpD,EADI,MAAPqB,GAAeA,EAAIhE,OAASY,GAAuB,MAAXoD,EAAI/D,IACL+D,EAAIvE,MAAMoB,SAAWmD,EAE7DtB,EACCJ,EACAmB,MAAMC,QAAQf,GAAgBA,EAAAA,CAAgBA,GAC9CiD,EACAxD,EACAU,EACAC,EACAC,EACAb,EACAE,EACAY,GAGDxB,EAAEF,KAAOqE,EAAAA,IAGTA,EAAAA,IAAsB,KAElBnE,EAAAA,IAAmBL,QACtBe,EAAYT,KAAKD,GAGdwE,IACHxE,EAAAA,IAAkBA,EAAAA,GAAyB,MAG5CA,EAAAA,KAAAA,OAEqB,MAArBuB,GACA4C,EAAAA,MAAuBxD,EAAAA,KAEvBwD,EAAAA,IAAqBxD,EAAAA,IACrBwD,EAAAA,IAAgBxD,EAAAA,KAEhBwD,EAAAA,aAiEFjB,EACAiB,EACAxD,EACAU,EACAC,EACAC,EACAb,EACAc,GARD,IAoBS3B,EAsDHgG,EACAC,EAjEDzB,EAAW1D,EAAS3C,MACpByG,EAAWN,EAASnG,MACpB+H,EAAW5B,EAAS5F,KACpBN,EAAI,EAAA,GAkBkB,QAftB8H,IAAoBzE,GAAAA,GAEC,MAArBC,EAAAA,KACItD,EAAIsD,EAAkB5B,OAAQ1B,IAAAA,IAC9B4B,EAAQ0B,EAAkBtD,MAO9B4B,IAAUqD,IACT6C,EAAWlG,EAAMmG,WAAaD,EAA6B,GAAlBlG,EAAMkG,WAChD,CACD7C,EAAMrD,EACN0B,EAAkBtD,GAAK,WAAA,GAMf,MAAPiF,EAAa,CAAA,GACC,OAAb6C,EAAAA,OAEIE,SAASC,eAAezB,GAI/BvB,EADG5B,EACG2E,SAASE,gBAAAA,6BAGdJ,GAGKE,SAASG,cAEdL,EACAtB,EAAS4B,IAAM5B,GAKjBlD,EAAoB,KAEpBC,GAAAA,EAAc,GAGE,OAAbuE,EAEC1B,IAAaI,GAAcjD,GAAe0B,EAAIoD,OAAS7B,IAC1DvB,EAAIoD,KAAO7B,OAEN,CAAA,GAENlD,EAAoBA,GAAqBlE,EAAMkJ,KAAKrD,EAAIsD,YAIpDX,GAFJxB,EAAW1D,EAAS3C,OAASL,GAEN8I,wBACnBX,EAAUrB,EAASgC,yBAIlBjF,EAAa,CAAA,GAGQ,MAArBD,EAAAA,IACH8C,EAAAA,GACKpG,EAAI,EAAGA,EAAIiF,EAAIwD,WAAW/G,OAAQ1B,IACtCoG,EAASnB,EAAIwD,WAAWzI,GAAGkF,MAAQD,EAAIwD,WAAWzI,GAAGmE,OAInD0D,GAAWD,KAGZC,IACED,GAAWC,EAAAA,QAAkBD,EAAAA,QAC/BC,EAAAA,SAAmB5C,EAAIyD,aAExBzD,EAAIyD,UAAab,GAAWA,EAAAA,QAAAA,KAAmB,YD3X1B5C,EAAKuB,EAAUJ,EAAU/C,EAAOsF,GAAAA,IACrD3I,MAECA,KAAKoG,EAAAA,aACLpG,GAAAA,QAAoBA,GAAiBA,KAAKwG,GAC7CzB,EAAYE,EAAKjF,EAAG,KAAMoG,EAASpG,GAAIqD,OAIpCrD,KAAKwG,EAENmC,GAAAA,mBAAkBnC,EAASxG,IAAAA,aAC7BA,GAAAA,QACAA,GAAAA,UACAA,GAAAA,YACAA,GACAoG,EAASpG,KAAOwG,EAASxG,IAEzB+E,EAAYE,EAAKjF,EAAGwG,EAASxG,GAAIoG,EAASpG,GAAIqD,GC8W/CuF,CAAU3D,EAAKuB,EAAUJ,EAAU/C,EAAOE,GAGtCsE,EACH3B,EAAAA,IAAAA,QAAqB,GAErBlG,EAAIkG,EAASnG,MAAMoB,SACnB6B,EACCiC,EACAlB,MAAMC,QAAQhE,GAAKA,EAAAA,CAAKA,GACxBkG,EACAxD,EACAU,EACAC,GAAAA,kBAASyE,EACTxE,EACAb,EACAa,EACGA,EAAkB,GAClBZ,EAAAA,KAAsBpB,EAAcoB,EAAU,GACjDa,GAIwB,MAArBD,EAAAA,IACEtD,EAAIsD,EAAkB5B,OAAQ1B,KACN,MAAxBsD,EAAkBtD,IAAYC,EAAWqD,EAAkBtD,IAM7DuD,IAAAA,UAEQiD,QAAAA,KACVxG,EAAIwG,EAASrC,SAKbnE,IAAMiF,EAAId,OAAAA,aAAU2D,IAA4B9H,IAEjD+E,EAAYE,EAAAA,QAAcjF,EAAGoG,EAASjC,OAAAA,GAAO,YAGhCqC,QAAAA,KACZxG,EAAIwG,EAASqC,UACd7I,IAAMiF,EAAI4D,SAEV9D,EAAYE,EAAAA,UAAgBjF,EAAGoG,EAASyC,SAAAA,WAKpC5D,EA1NW6D,CACfpG,EAAAA,IACAwD,EACAxD,EACAU,EACAC,EACAC,EACAb,EACAc,IAIGe,EAAMjF,EAAQ0J,SAASzE,EAAI4B,GAC/B,MAAOJ,GACRI,EAAAA,IAAqB,MAEjB3C,GAAoC,MAArBD,KAClB4C,EAAAA,IAAgBvD,EAChBuD,EAAAA,MAAwB3C,EACxBD,EAAkBA,EAAkB9B,QAAQmB,IAAW,MAIxDtD,EAAAA,IAAoByG,EAAGI,EAAUxD,aASnBK,EAAWN,EAAauG,GACnC3J,EAAAA,KAAiBA,EAAAA,IAAgB2J,EAAMvG,GAE3CA,EAAYF,MAAAA,SAAKR,OAGfU,EAAcV,EAAAA,IACdA,EAAAA,IAAAA,GACAU,EAAYF,MAAAA,SAAK0G,GAEhBA,EAAGX,KAAKvG,MAER,MAAO+D,GACRzG,EAAAA,IAAoByG,EAAG/D,EAAAA,kBAsLVsC,EAAS7D,EAAK2D,EAAOzD,0BAExBF,EAAmBA,EAAI2D,GAC7B3D,EAAI0I,QAAU/E,EAClB,MAAO2B,GACRzG,EAAAA,IAAoByG,EAAGpF,aAYT0D,EAAQ1D,EAAOyI,EAAaC,GAA5C,IACKC,EAoBMrJ,EAAAA,GAnBNX,EAAQ+E,SAAS/E,EAAQ+E,QAAQ1D,IAEhC2I,EAAI3I,EAAMF,OACT6I,EAAEH,SAAWG,EAAEH,UAAYxI,EAAAA,KAAY2D,EAASgF,EAAG,KAAMF,IAGjC,OAAzBE,EAAI3I,EAAAA,KAA2B,CAAA,GAC/B2I,EAAEC,qBAAAA,IAEJD,EAAEC,uBACD,MAAOxD,GACRzG,EAAAA,IAAoByG,EAAGqD,GAIzBE,EAAExH,KAAOwH,EAAAA,IAAe,KAAA,GAGpBA,EAAI3I,EAAAA,IAAAA,IACCV,EAAI,EAAGA,EAAIqJ,EAAE3H,OAAQ1B,IACzBqJ,EAAErJ,IACLoE,EAAQiF,EAAErJ,GAAImJ,EAAAA,mBAAoBzI,EAAMJ,MAKtC8I,GAA4B,MAAd1I,EAAAA,KAAoBT,EAAWS,EAAAA,KAIlDA,EAAAA,IAAaA,EAAAA,SAAAA,WAILqG,EAAShH,EAAOkH,EAAO5F,eACnBJ,YAAYlB,EAAOsB,YClfhByF,EAAOpG,EAAOkC,EAAW2G,GAAzC,IAMKhG,EAOAb,EAUAD,EAtBApD,EAAAA,IAAeA,EAAAA,GAAcqB,EAAOkC,GAYpCF,GAPAa,EAAAA,mBAAqBgG,GAQtB,KACCA,GAAeA,EAAAA,KAA0B3G,EAAAA,IAQzCH,EAAAA,GACJI,EACCD,EARDlC,IACG6C,GAAegG,GACjB3G,GAAAA,aLpB4BtC,EAAMP,EAAOoB,GAAAA,IAEzCZ,EACAC,EACAR,EAHGwJ,EAAAA,OAICxJ,KAAKD,EAAAA,OACLC,EAAYO,EAAMR,EAAMC,GAAAA,OACnBA,EAAYQ,EAAMT,EAAMC,GAC5BwJ,EAAgBxJ,GAAKD,EAAMC,GAAAA,GAG7ByJ,UAAU/H,OAAS,IACtB8H,EAAgBrI,SACfsI,UAAU/H,OAAS,EAAItC,EAAMkJ,KAAKmB,UAAW,GAAKtI,GAAAA,mBAKzCb,GAA2C,MAArBA,EAAKoJ,aAAAA,IAChC1J,KAAKM,EAAKoJ,kBAAAA,IACVF,EAAgBxJ,KACnBwJ,EAAgBxJ,GAAKM,EAAKoJ,aAAa1J,WAKnCK,EAAYC,EAAMkJ,EAAiBjJ,EAAKC,EAAK,MKLtC2H,CAAcjH,EAAU,KAAA,CAAOR,IAS5CgC,GAAYhD,EACZA,OAAAA,IACAkD,EAAUE,iBACTS,GAAegG,EAAAA,CACZA,GACD7G,EACA,KACAE,EAAU+G,WACVvK,EAAMkJ,KAAK1F,EAAU2F,YACrB,KACH9F,GACCc,GAAegG,EACbA,EACA7G,EACAA,EAAAA,IACAE,EAAU+G,WACbpG,GAIDR,EAAWN,EAAa/B,GPrCZtB,EAAQO,EAAUP,MCfzBC,EAAAA,CAAUwB,IAAA,SOJY+I,EAAOlJ,OAAAA,IAE9B8B,EAAWqH,EAAMC,EAEbpJ,EAAQA,EAAAA,IAAAA,IACV8B,EAAY9B,EAAAA,OAAsB8B,EAAAA,GAAAA,IAAAA,IAErCqH,EAAOrH,EAAUvB,cAE4B,MAAjC4I,EAAKE,2BAChBvH,EAAUwH,SAASH,EAAKE,yBAAyBH,IACjDE,EAAUtH,EAAAA,KAGwB,MAA/BA,EAAUyH,oBACbzH,EAAUyH,kBAAkBL,GAC5BE,EAAUtH,EAAAA,KAIPsH,EAAAA,OACKtH,EAAAA,IAA0BA,EAElC,MAAOsD,GACR8D,EAAQ9D,EAAAA,MAKL8D,INjCHtK,EAAU,ECuBd8B,EAAUyF,UAAUmD,SAAAA,SAAoBE,EAAQC,GAAAA,IAE3CC,EAEHA,EADsB,MAAAC,KAAnBA,KAAAA,KAA2BA,MAAAA,KAAyBpD,MAAAA,KACnDoD,IAAAA,KAEAA,IAAkBxK,EAAAA,QAAgBoH,OAAAA,mBAG5BiD,IAGVA,EAASA,EAAOrK,EAAAA,GAAWuK,GAAAA,KAASrK,QAGjCmK,GACHrK,EAAOuK,EAAGF,GAIG,MAAVA,GAAAA,KAEAG,MACCF,GAAAA,KAAUE,IAAsBrI,KAAKmI,GACzCrI,EAAAA,QAUFV,EAAUyF,UAAUyD,YAAAA,SAAuBH,QACtCE,MAAAA,KAAAA,KAAAA,EAKCF,GAAAA,KAAUE,IAAsBrI,KAAKmI,GACzCrI,EAAAA,QAcFV,EAAUyF,UAAUC,OAAS5F,EAyFzB3B,EAAAA,GAQEC,EAAAA,mBACE+K,QACJA,QAAQ1D,UAAU2D,KAAKC,KAAKF,QAAQG,WACpCC,WA2CJ1I,EAAAA,IAAyB,EM5NzB,IAAI3C,EAAU,WAqBLe,EAAYC,EAAMP,EAAOQ,EAAKqK,EAAUC,GAAAA,IAK/CrK,EACAR,EAFGwJ,EAAAA,OAGCxJ,KAAKD,EAAAA,OACLC,EACHQ,EAAMT,EAAMC,GAEZwJ,EAAgBxJ,GAAKD,EAAMC,GAAAA,IAIvBU,EAAAA,CACLJ,KAAAA,EACAP,MAAOyJ,EACPjJ,IAAAA,EACAC,IAAAA,EAAAA,IACW,KAAAG,GACF,KAAAC,IACD,EAAAC,IACF,KAAAC,SAAA,EACIC,IACE,KAAAC,IACA,KACZC,iBAAAA,EAAaF,MACAzB,EACbsL,SAAAA,EACAC,OAAAA,GAAAA,GAKmB,mBAATvK,IAAwBE,EAAMF,EAAKoJ,cAAAA,IACxC1J,KAAKQ,OAAAA,IACEgJ,EAAgBxJ,KAC1BwJ,EAAgBxJ,GAAKQ,EAAIR,WAIxBX,EAAQqB,OAAOrB,EAAQqB,MAAMA,GAC1BA,ECpED,MAAMoK,EAAM,4NCWNC,UAAaC,EAEtBlE,QAAMmE,IAAEA,EAAGC,YAAEA,EAAWC,IAAEA,EAAGC,KAAEA,EAAIC,MAAEA,EAAKC,OAAEA,kBAQ9B,CAACxG,MAPA,KACPqG,OACAC,QACAC,SACAC,EACAC,gBAAe,SAAWN,SCFtC,MAoCMO,EAAc,CAAOP,EAAUQ,SAC9B,IAAIzL,EAAI,EAAGA,EAAIiL,EAAIvJ,OAAQ1B,IAC9ByL,EAAOzL,GAAKiL,EAAIjL,IAId0L,EAAY,CAAOC,EAAUC,EAAeC,KAChD,IAAIC,EA3CO,CAAOC,IAClB,IACEC,EACAC,EAFEC,EAAuBH,EAAMrK,OAG/ByK,EAAQC,KAAKD,MACbE,EAAMD,KAAKE,YAEN,IAAMJ,GACXD,EAAcE,EAAME,IAAQH,GAC5BA,GAAgB,EAChBF,EAAiBD,EAAMG,GACvBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,SAGhBD,GA4BQQ,CAAQZ,EAAIvM,MAAMwM,EAAOC,WACjCL,EAAeM,EAAUH,IAgB5Ba,EAAc,CAAIC,EAAeC,EAAgBC,EAAmBC,KACxE,IAAIC,EACFC,EACAC,EAGAC,EAFAC,EAAQb,KAAKc,IACbC,EAAQf,KAAKgB,QAEV,IAAIpN,EAAI2M,EAAY,EAAG3M,GAAK,EAAGA,IAsBlC,GArBAgN,EAAIhN,GAAK,EACT6M,EAAKJ,EAAMO,GACXF,EAAKL,EAAMO,EAAI,GACfD,EAASN,EAAME,EAAY3M,GAC3B6M,EAAGQ,EAAIN,EAAOM,EACdR,EAAGS,EAAIP,EAAOO,EACVZ,EAAU,GAAK1M,GACjB6M,EAAGxB,MAAQ0B,EAAO1B,MAClBwB,EAAGvB,OAASuB,EAAG3B,YAAc6B,EAAO1B,MAAQwB,EAAG3B,YAAc,EAC7D4B,EAAGO,EAAIN,EAAOM,EACdP,EAAGQ,EAAIP,EAAOO,EAAIT,EAAGvB,OACrBwB,EAAGzB,MAAQ0B,EAAO1B,MAClByB,EAAGxB,OAASyB,EAAOzB,OAASuB,EAAGvB,SAE/BuB,EAAGxB,MAAQ0B,EAAOzB,OAASuB,EAAG3B,YAC9B2B,EAAGvB,OAASyB,EAAOzB,OACnBwB,EAAGO,EAAIN,EAAOM,EAAIR,EAAGxB,MACrByB,EAAGQ,EAAIP,EAAOO,EACdR,EAAGzB,MAAQ0B,EAAO1B,MAAQwB,EAAGxB,MAC7ByB,EAAGxB,OAASyB,EAAOzB,QAEjB0B,EAAIL,EAAW,CACjB,IAAIY,EAAKV,EAAGxB,MAAQwB,EAAGvB,OACrBkC,EAAKV,EAAGzB,MAAQyB,EAAGxB,OAChBuB,EAAGY,QACNb,EAAOM,IAAMD,EAAML,EAAOM,IAAKK,IAE5BT,EAAGW,QACNb,EAAOM,IAAMD,EAAML,EAAOM,IAAKM,IAEjCZ,EAAOQ,IAAMD,EAAMP,EAAOQ,IAAKG,EAAIC,KAK5BE,EAAc,CACzBrC,EACAC,EACAqC,EACAC,KAEA,MAAMC,EAAM,UAEZ,IAMEnB,EACAoB,EACAC,EACAC,EACAC,EACArB,EACAsB,EACAC,EACA9L,EACArC,EACAoO,EACAC,EACArB,EAlBEsB,EAAcjD,EAAQC,EACxBqB,GA9FoB4B,EA8FOZ,EAAajM,OA7F1C6M,IACAA,GAAKA,GAAK,EACVA,GAAKA,GAAK,EACVA,GAAKA,GAAK,EACVA,GAAKA,GAAK,EACVA,GAAKA,GAAK,GACVA,GAAKA,GAAK,KACVA,GAuFEC,GAlEgBC,GAkEQ9B,GAAa,GAAK,EAjE5C5I,MAAM2K,MAAM,KAAM3K,MAAM0K,IAAME,KAAG,KAAA,CAG3BtB,EAAG,EACHC,EAAG,EACHjC,MAAO,EACPC,OAAQ,EACRJ,YAAa,EACbuC,OAAO,OA0DXmB,EAAU,GACVC,GAAU,IAAIC,MAAOC,UAAYnB,EACjCoB,EAAmBnB,EAcnBoB,EAA0B,IAC1BxC,EAAQkB,EAAagB,KAAG,CAAEtF,EAAG6F,KAAG,CAC9B7B,EAAG,EACHC,EAAG,EACHjC,MAAO,EACPC,OAAQ,EACR6D,MAAOD,EACPhE,YAAa7B,EACboE,OAAO,MA3FG,IAAIgB,EA7BIF,EA2HlB5B,GAAa,IACfsC,EAA0BpB,OAI5BrC,EAAeiB,EAAO+B,GACtBR,EAAY,GAAKrB,EACVmC,KAAKM,MAAQP,GAElB,GAxHkB3B,EAuHI,EAvHCE,EAuHEY,EAtH3Bd,EAAMd,KAAKiD,KAAKnC,GAChBE,EAAMhB,KAAKD,MAAMiB,GAqHfV,EApHKN,KAAKD,MAAMC,KAAKE,UAAYc,EAAMF,IAAQA,GAqH3C0B,EAAWlC,GAAf,KAGAkC,EAAWlC,IAAU,EACrBhB,EAAa8C,EAAW,EAAG7B,GACtB3M,EAAI,EAAGoO,EAAIzB,EAAY,EAAG3M,EAAIoO,EAAGpO,IACpCgN,EAAIhN,GAAK,EACTkO,EAAKM,EAAUxB,GAAG9B,YAClBiD,EAAKK,EAAUxB,EAAI,GAAG9B,YACX,IAAPgD,GAAmB,IAAPC,GACd9L,EAAI6L,EAAKC,EACLzB,EAAU,GAAK1M,IACjBqC,EAAK6L,EAAKC,EAAM9L,IAGlBA,EAAI6L,GAAMC,EAEZK,EAAUxO,EAAI2M,GAAWzB,YAAc7I,EAIzC,GAFA4L,EAAQK,EAAcjM,EACtByL,EAAoBG,EAAaK,EAAcjM,EAAnB,EAAuB,EAAIiM,EAAcjM,EACjEyL,EAAoBmB,EAAyB,CAC/CZ,EAAOG,EAAUA,EAAU9M,OAAS,GACpC2M,EAAKhD,MAAQ4C,EAAQ3C,EAASjJ,EAAIgJ,EAClCgD,EAAK/C,OAAS2C,EAAQ3C,EAASD,EAAQhJ,EACvCuK,EAAM,CACJM,IAAKW,EACLT,KAAMS,GAERrB,EAAegC,EAAW9B,EAAQC,EAAWC,GAC7C,IAAI0C,EAAQxB,GAAqB,EAAIlB,EAAOM,IAAMN,EAAOQ,KACzD,GAAIkC,EAAQN,EAAkB,CAC5BA,EAAmBM,EAEnBvB,EADUS,EAAUpP,MAAM,EAAGuN,GAAW4C,QAAOC,IAAMA,EAAE/B,QAC1CkB,KAAIa,IAAC,CAChBnC,EAAGmC,EAAEnC,EACLC,EAAGkC,EAAElC,EACL6B,MAAOK,EAAEL,MACT9D,MAAOmE,EAAEnE,MACTC,OAAQkE,EAAElE,WAEO,CACjB,IAAImE,EAASpE,EAAQgD,EAAKhD,MACtBqE,EAASpE,EAAS+C,EAAK/C,OAC3ByC,EAASA,EAAOY,KAAIa,IAAC,CACnBnC,EAAGmC,EAAEnC,EAAIoC,EACTnC,EAAGkC,EAAElC,EAAIoC,EACTP,MAAOK,EAAEL,MACT9D,MAAOmE,EAAEnE,MAAQoE,EACjBnE,OAAQkE,EAAElE,OAASoE,SAzKb,IAAIxC,EAAKE,SA+KlBW;;;;;GC1NP,WAID,IAAI/F,EAAwB,oBAAN2H,aAAgD,IAAfA,OAAO3H,SAA2B2H,OAAO3H,SAAQ,GACpG4H,EAA8CC,EAE9CC,EAAE,eACL,IAAIC,EAEAC,EAAK,srBA+CLhQ,EAAI,EACJoO,EAAI4B,EAAMtO,OACVuO,EAAG,GAEAjQ,EAAIoO,EAAGpO,IAEb,IADA+P,EAAMC,EAAMhQ,KACD+P,EAAI,KAAM/H,EAAU,KACzBhI,EAAI,EAAGA,EAAI+P,EAAIrO,OAAQ1B,IAC3BiQ,EAAID,EAAM,GAAGhQ,IAAM+P,EAAI/P,UAEjBiQ,SAIF,EAhEF,GAmEFC,EAAY,CACfC,OAAQL,EAAGM,iBACXxG,MAAOkG,EAAGO,iBAGPC,EAAU,CACbC,QAAO,SAAYC,EAASnR,UACpB,IAAIkL,QAAO,SAAWG,EAAS+F,GACrC,IAAIC,EAAmB,gBACjBC,IAAG,SAAWD,GACnBhG,KACCD,KAAIJ,WAEDuG,GAAE,SAAWF,GAIlB,IAAIG,GAFJL,EAAUA,GAAWxI,EAAS8I,iBAEFhB,EAAGiB,mBAAmB1R,GAE9CwR,aAAyBtG,SAC5BsG,EAAcrG,KAAKkG,GAAqBM,MAAMP,IAE9ChG,KAAIJ,QAEP4G,KAAI,kBACI,IAAI1G,QAAO,SAAWG,EAAS+F,GACrC,GAAEpG,KAAQ6G,aAAV,CAKA,IAAIC,EAAgB,gBACdR,IAAG,SAAWQ,GACnBzG,KACCD,KAAIJ,WAEDuG,GAAE,SAAWO,GAElB,IAAIN,EAAgB7I,EAAS8H,EAAGsB,kBAE5BP,aAAyBtG,SAC5BsG,EAAcrG,KAAK2G,GAAkBH,MAAMP,QAd3C/F,KAgBAD,KAAIJ,QAEPgH,OAAM,SAAYb,EAASnR,eACd6R,aAAY7G,KAAQ4G,OAAI5G,KAAUkG,QAAQC,EAASnR,IAEhEiS,SAAQ,SAAYnH,QACdyG,GAAE,SAAWzG,IAEnBoH,QAAO,SAAYpH,QACbyG,GAAE,QAAUzG,IAElByG,GAAE,SAAY3K,EAAOkE,GACpB,IAAIqH,EAAYtB,EAAajK,GACzBuL,GACHxJ,EAAStC,iBAAiB8L,EAAWrH,GAAU,IAGjDwG,IAAG,SAAY1K,EAAOkE,GACrB,IAAIqH,EAAYtB,EAAajK,GACzBuL,GACHxJ,EAASnC,oBAAoB2L,EAAWrH,GAAU,IAGpDsH,IAAK3B,GAGDA,GAUL4B,OAAOC,iBAAiBrB,EAAU,CACjCY,aAAY,CACXU,IAAG,kBACKC,QAAQ7J,EAAS8H,EAAGgC,sBAG7BtB,QAAO,CACNuB,YAAY,EACZH,IAAG,kBACK5J,EAAS8H,EAAGgC,qBAGrBE,UAAS,CACRD,YAAY,EACZH,IAAG,kBAEKC,QAAQ7J,EAAS8H,EAAGmC,wBAK1BrC,EACHC,EAAiBS,EAEjBX,OAAOW,WAAaA,GAjChBV,EACHC,EAAc,CAAImC,WAAW,GAE7BrC,OAAOW,WAAU,CAAI0B,WAAW,GAnJjC,SCaWE,UAAgBlH,cAGfmH,GACVC,MAAMD,QAHRE,UAAW,OAwDXC,KAAI,UACGtI,SAAQ,CAAGuI,UAAQlI,KAAQpD,MAAMsL,gBACjCjI,oBAGPkI,OAAM,UACCC,2BAGPC,IAAG,UACI1I,SAAQ,CAAG2I,OAAQvG,KAAKc,IAAG7C,KAAMtK,MAAM4S,OAAOjR,OAAM2I,KAAOpD,MAAM0L,OAAS,UAC1EF,2BAGPG,OAAM,UACC5I,SAAQ,CAAG2I,OAAQvG,KAAKgB,IAAI,EAAC/C,KAAOpD,MAAM0L,OAAS,UACnDF,2BApEAxL,MAAK,CACRsL,UAAU,EACVM,UAAS,GACTF,OAAQ,GAIZvL,yBACOqL,qBACL9C,OAAOjK,iBAAgB,UAAS,IAAA2E,KAAaoI,uBAG/CA,qBACE,GAAEpI,KAAOgI,SAAQ,OAGjB,MAAMxQ,EAAIwI,KAAQxI,UACbwQ,UAAW,EAChB,IAAIS,EAAIjR,EAAKkR,YACXC,EAAInR,EAAKoR,aACTC,EAAK7I,KAAQtK,MAAM4S,OAAOvT,MAAM,EAACiL,KAAOpD,MAAM0L,QAC9CQ,EAAS,MAETA,EAAYzF,EACVoF,EACAE,EACAE,EAAMvE,KAAIyE,GAAQA,EAAKlI,cACvB,YAEMiI,GACVE,uBAAqB,UACdrJ,SAAQ,CACX6I,UAAWM,EACR/Q,MAAI,CAAEC,EAAGC,IAAMD,EAAE8M,MAAQ7M,EAAE6M,QAC3BR,KAAI2E,IAAC,CACJrI,IAAGZ,KAAOtK,MAAM4S,OAAOW,EAAEnE,OAAOlE,IAChCC,YAAWb,KAAOtK,MAAM4S,OAAOW,EAAEnE,OAAOjE,YACxCC,IAAKmI,EAAEhG,EACPlC,KAAMkI,EAAEjG,EACRhC,MAAOiI,EAAEjI,MACTC,OAAQgI,EAAEhI,kBAGX+G,UAAW,OACX/H,iBAIThD,+BACS,EAsBTR,OAAO/G,GAAK8S,UAAIA,EAASN,SAAEA,EAAQI,OAAEA,KAAW1L,mBAExC,CAACsM,UAAS,YAAahB,EAAQ,OAAS,qBACvC,UACAM,EAAUlE,KAAI6E,GAAKC,EACjB1I,EAAI,IAAKyI,gBAGV,sBACK,CAACE,MAAK,OAAQC,QAAO,IAAAtJ,KAAamI,6CAGlC,CAACkB,MAAK,cAAeC,QAAO,IAAAtJ,KAAaiI,yCAGzC,CACLoB,MAAK,aACLC,QAAO,KACD9D,EAAAmC,WACFnC,EAAAU,8CAMC,CAACmD,MAAK,YAAaC,QAAO,IAAAtJ,KAAaqI,kCAGvC,CAACgB,MAAK,YAAaC,QAAO,IAAAtJ,KAAauI,oCCrHxD,MAAMgB,EAAQ,IACZ,IAAIrJ,SAAQG,IACV1C,SAAStC,iBAAgB,mBAAqBgF,MAQ5CmJ,EAAe5I,GACnB,IAAIV,SAAwBG,IAC1B,MAAMoJ,EAAM,IAAIC,MAChBD,EAAIpO,iBAAgB,QAAO,IAAQgF,EAAO,KAAGO,EAAKC,YAAa4I,EAAIzI,MAAQyI,EAAIxI,WAC/EwI,EAAI7I,IAAMA,gBAIZ,MAAK,IAAO+I,SAAuBzJ,QAAQ0J,IAAG,CAAEL,KAAoB9I,EAAO6D,IAAIkF,KAC/EK,EAAMT,EAAEvB,EAAO,CAACS,OAAQqB,IAAmBhM,SAASmM","sources":["node_modules/preact/src/constants.js","node_modules/preact/src/util.js","node_modules/preact/src/options.js","node_modules/preact/src/create-element.js","node_modules/preact/src/component.js","node_modules/preact/src/diff/children.js","node_modules/preact/src/diff/props.js","node_modules/preact/src/diff/index.js","node_modules/preact/src/render.js","node_modules/preact/src/diff/catch-error.js","node_modules/preact/jsx-runtime/src/index.js","src/images.ts","src/tile.tsx","src/layout.ts","node_modules/screenfull/dist/screenfull.js","src/diorama.tsx","src/start.tsx"],"sourcesContent":["export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\tif (options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tnull,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children != null && // Can be null if childVNode suspended\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Browsers will infer an option's `value` from `textContent` when\n\t\t\t// no value is present. This essentially bypasses our code to set it\n\t\t\t// later in `diff()`. It works fine in all browsers except for IE11\n\t\t\t// where it breaks setting `select.value`. There it will be always set\n\t\t\t// to an empty string. Re-applying an options value will fix that, so\n\t\t\t// there are probably some internal data structures that aren't\n\t\t\t// updated properly.\n\t\t\t//\n\t\t\t// To fix it we make sure to reset the inferred value, so that our own\n\t\t\t// value check in `diff()` won't be skipped.\n\t\t\tif (!isHydrating && newParentVNode.type === 'option') {\n\t\t\t\t// @ts-ignore We have validated that the type of parentDOM is 'option'\n\t\t\t\t// in the above check\n\t\t\t\tparentDom.value = '';\n\t\t\t} else if (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldParentVNode, i + 1);\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\tfor (let tmp = 0; tmp < childVNode._children.length; tmp++) {\n\t\tlet vnode = childVNode._children[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tvnode,\n\t\t\t\t\tvnode,\n\t\t\t\t\tchildVNode._children,\n\t\t\t\t\tvnode._dom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink[H:h]/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (\n\t\t\tvalue != null &&\n\t\t\t(value !== false || (name[0] === 'a' && name[1] === 'r'))\n\t\t) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t(child === dom ||\n\t\t\t\t\t(nodeType ? child.localName == nodeType : child.nodeType == 3))\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value || (nodeType === 'progress' && !i))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(r[i], parentVNode, typeof vnode.type != 'function');\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) removeNode(vnode._dom);\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n */\nexport function _catchError(error, vnode) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { options, Fragment } from 'preact';\n\n/** @typedef {import('preact').VNode} VNode */\n\nlet vnodeId = 0;\n\n/**\n * @fileoverview\n * This file exports various methods that implement Babel's \"automatic\" JSX runtime API:\n * - jsx(type, props, key)\n * - jsxs(type, props, key)\n * - jsxDEV(type, props, key, __source, __self)\n *\n * The implementation of createVNode here is optimized for performance.\n * Benchmarks: https://esbench.com/bench/5f6b54a0b4632100a7dcd2b3\n */\n\n/**\n * JSX.Element factory used by Babel's {runtime:\"automatic\"} JSX transform\n * @param {VNode['type']} type\n * @param {VNode['props']} props\n * @param {VNode['key']} [key]\n * @param {string} [__source]\n * @param {string} [__self]\n */\nfunction createVNode(type, props, key, __source, __self) {\n\t// We'll want to preserve `ref` in props to get rid of the need for\n\t// forwardRef components in the future, but that should happen via\n\t// a separate PR.\n\tlet normalizedProps = {},\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'ref') {\n\t\t\tref = props[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tconst vnode = {\n\t\ttype,\n\t\tprops: normalizedProps,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: --vnodeId,\n\t\t__source,\n\t\t__self\n\t};\n\n\t// If a Component VNode, check for and apply defaultProps.\n\t// Note: `type` is often a String, and can be `undefined` in development.\n\tif (typeof type === 'function' && (ref = type.defaultProps)) {\n\t\tfor (i in ref)\n\t\t\tif (typeof normalizedProps[i] === 'undefined') {\n\t\t\t\tnormalizedProps[i] = ref[i];\n\t\t\t}\n\t}\n\n\tif (options.vnode) options.vnode(vnode);\n\treturn vnode;\n}\n\nexport {\n\tcreateVNode as jsx,\n\tcreateVNode as jsxs,\n\tcreateVNode as jsxDEV,\n\tFragment\n};\n","export const images = [\n    'samples/1.jpg',\n    'samples/2.jpg',\n    'samples/3.jpg',\n    'samples/4.jpg',\n    'samples/5.jpg',\n    'samples/6.jpg',\n    'samples/7.jpg',\n    'samples/8.jpg',\n    'samples/9.jpg',\n    'samples/10.jpg',\n    'samples/11.jpg',\n    'samples/12.jpg',\n    'samples/13.jpg'\n]\n","import {h, Component} from 'preact'\n\nexport interface TileProps {\n    src: string\n    aspectRatio: number\n    top: number\n    left: number\n    width: number\n    height: number\n}\n\nexport class Tile extends Component<TileProps> {\n\n    render({src, aspectRatio, top, left, width, height}) {\n        const style = {\n            top,\n            left,\n            width,\n            height,\n            backgroundImage: `url(./${src})`\n        }\n        return <li style={style}/>\n    }\n}\n","export type Milliseconds = number\n\nexport interface Node {\n  x: number\n  y: number\n  width: number\n  height: number\n  aspectRatio?: number\n  dummy?: boolean\n  index?: number\n}\n\ninterface MinMax {\n  min: number\n  max: number\n}\n\nconst shuffle = <T>(array: T[]) => {\n  let currentIndex: number = array.length,\n    temporaryValue: T,\n    randomIndex: number,\n    floor = Math.floor,\n    rnd = Math.random\n\n  while (0 !== currentIndex) {\n    randomIndex = floor(rnd() * currentIndex)\n    currentIndex -= 1\n    temporaryValue = array[currentIndex]\n    array[currentIndex] = array[randomIndex]\n    array[randomIndex] = temporaryValue\n  }\n\n  return array\n}\n\nconst nextPowerOfTwo = (v: number) => {\n  v--\n  v |= v >> 1\n  v |= v >> 2\n  v |= v >> 4\n  v |= v >> 8\n  v |= v >> 16\n  v |= v >> 32\n  v++\n  return v\n}\n\nconst getRandomInt = (min, max) => {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  return Math.floor(Math.random() * (max - min)) + min\n}\n\nconst arrayReplaceIn = <T>(src: T[], target: T[]) => {\n  for (let i = 0; i < src.length; i++) {\n    target[i] = src[i]\n  }\n}\n\nconst shuffleSlice = <T>(arr: T[], start: number, end: number) => {\n  let shuffled = shuffle(arr.slice(start, end))\n  return arrayReplaceIn(shuffled, arr)\n}\n\nconst dummyArray = (len: number): Node[] =>\n  Array.apply(null, Array(len)).map(\n    () =>\n      ({\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n        aspectRatio: 0,\n        dummy: true\n      } as Node)\n  )\n\nconst calculateSizes = (nodes: Node[], splits: number, nextPower: number, minmax: MinMax) => {\n  let n1,\n    n2,\n    parent,\n    minFn = Math.min,\n    maxFn = Math.max,\n    d\n  for (let i = nextPower - 2; i >= 0; i--) {\n    d = i << 1\n    n1 = nodes[d]\n    n2 = nodes[d + 1]\n    parent = nodes[nextPower + i]\n    n1.x = parent.x\n    n1.y = parent.y\n    if (splits & (1 << i)) {\n      n1.width = parent.width\n      n1.height = n1.aspectRatio ? parent.width / n1.aspectRatio : 0\n      n2.x = parent.x\n      n2.y = parent.y + n1.height\n      n2.width = parent.width\n      n2.height = parent.height - n1.height\n    } else {\n      n1.width = parent.height * n1.aspectRatio\n      n1.height = parent.height\n      n2.x = parent.x + n1.width\n      n2.y = parent.y\n      n2.width = parent.width - n1.width\n      n2.height = parent.height\n    }\n    if (d < nextPower) {\n      let d1 = n1.width + n1.height,\n        d2 = n2.width + n2.height\n      if (!n1.dummy) {\n        minmax.min = minFn(minmax.min, d1)\n      }\n      if (!n2.dummy) {\n        minmax.min = minFn(minmax.min, d2)\n      }\n      minmax.max = maxFn(minmax.max, d1, d2)\n    }\n  }\n}\n\nexport const searchSolution = (\n  width: number,\n  height: number,\n  aspectRatios: number[],\n  searchTime: Milliseconds\n): Node[] => {\n  const BIG = 999999999\n\n  let targetRatio = width / height,\n    nextPower = nextPowerOfTwo(aspectRatios.length),\n    fullArray = dummyArray((nextPower << 1) - 1),\n    splitCache = {},\n    endTime = new Date().getTime() + searchTime,\n    previousMinScore = BIG,\n    splits: number,\n    currentDifference: number,\n    winner: Node[],\n    arrayHalf: number,\n    wider: boolean,\n    minmax: MinMax,\n    a1,\n    a2,\n    a,\n    i,\n    l,\n    last,\n    d,\n    minAspectRatioThreshold = 0.05,\n    nodes = aspectRatios.map((r, idx) => ({\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0,\n      index: idx,\n      aspectRatio: r,\n      dummy: false\n    }))\n\n  if (nextPower <= 5) {\n    minAspectRatioThreshold = BIG\n  }\n  const allowCropping = true\n\n  arrayReplaceIn(nodes, fullArray)\n  arrayHalf = 1 << nextPower\n  while (Date.now() < endTime) {\n    splits = getRandomInt(0, arrayHalf)\n    if (splitCache[splits]) {\n      continue\n    }\n    splitCache[splits] = true\n    shuffleSlice(fullArray, 0, nextPower)\n    for (i = 0, l = nextPower - 1; i < l; i++) {\n      d = i << 1\n      a1 = fullArray[d].aspectRatio\n      a2 = fullArray[d + 1].aspectRatio\n      if (a1 !== 0 && a2 !== 0) {\n        a = a1 + a2\n        if (splits & (1 << i)) {\n          a = (a1 * a2) / a\n        }\n      } else {\n        a = a1 || a2\n      }\n      fullArray[i + nextPower].aspectRatio = a\n    }\n    wider = targetRatio > a\n    currentDifference = wider ? -1 + targetRatio / a : 1 - targetRatio / a\n    if (currentDifference < minAspectRatioThreshold) {\n      last = fullArray[fullArray.length - 1]\n      last.width = wider ? height * a : width\n      last.height = wider ? height : width / a\n      minmax = {\n        min: BIG,\n        max: -BIG\n      } as MinMax\n      calculateSizes(fullArray, splits, nextPower, minmax)\n      let score = currentDifference + (1 - minmax.min / minmax.max)\n      if (score < previousMinScore) {\n        previousMinScore = score\n        let arr = fullArray.slice(0, nextPower).filter(n => !n.dummy)\n        winner = arr.map(n => ({\n          x: n.x,\n          y: n.y,\n          index: n.index,\n          width: n.width,\n          height: n.height\n        }))\n        if (allowCropping) {\n          let scaleX = width / last.width\n          let scaleY = height / last.height\n          winner = winner.map(n => ({\n            x: n.x * scaleX,\n            y: n.y * scaleY,\n            index: n.index,\n            width: n.width * scaleX,\n            height: n.height * scaleY\n          }))\n        }\n      }\n    }\n  }\n  return winner\n}\n","/*!\n* screenfull\n* v5.1.0 - 2020-12-24\n* (c) Sindre Sorhus; MIT License\n*/\n(function () {\n\t'use strict';\n\n\tvar document = typeof window !== 'undefined' && typeof window.document !== 'undefined' ? window.document : {};\n\tvar isCommonjs = typeof module !== 'undefined' && module.exports;\n\n\tvar fn = (function () {\n\t\tvar val;\n\n\t\tvar fnMap = [\n\t\t\t[\n\t\t\t\t'requestFullscreen',\n\t\t\t\t'exitFullscreen',\n\t\t\t\t'fullscreenElement',\n\t\t\t\t'fullscreenEnabled',\n\t\t\t\t'fullscreenchange',\n\t\t\t\t'fullscreenerror'\n\t\t\t],\n\t\t\t// New WebKit\n\t\t\t[\n\t\t\t\t'webkitRequestFullscreen',\n\t\t\t\t'webkitExitFullscreen',\n\t\t\t\t'webkitFullscreenElement',\n\t\t\t\t'webkitFullscreenEnabled',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t// Old WebKit\n\t\t\t[\n\t\t\t\t'webkitRequestFullScreen',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitCurrentFullScreenElement',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t[\n\t\t\t\t'mozRequestFullScreen',\n\t\t\t\t'mozCancelFullScreen',\n\t\t\t\t'mozFullScreenElement',\n\t\t\t\t'mozFullScreenEnabled',\n\t\t\t\t'mozfullscreenchange',\n\t\t\t\t'mozfullscreenerror'\n\t\t\t],\n\t\t\t[\n\t\t\t\t'msRequestFullscreen',\n\t\t\t\t'msExitFullscreen',\n\t\t\t\t'msFullscreenElement',\n\t\t\t\t'msFullscreenEnabled',\n\t\t\t\t'MSFullscreenChange',\n\t\t\t\t'MSFullscreenError'\n\t\t\t]\n\t\t];\n\n\t\tvar i = 0;\n\t\tvar l = fnMap.length;\n\t\tvar ret = {};\n\n\t\tfor (; i < l; i++) {\n\t\t\tval = fnMap[i];\n\t\t\tif (val && val[1] in document) {\n\t\t\t\tfor (i = 0; i < val.length; i++) {\n\t\t\t\t\tret[fnMap[0][i]] = val[i];\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t})();\n\n\tvar eventNameMap = {\n\t\tchange: fn.fullscreenchange,\n\t\terror: fn.fullscreenerror\n\t};\n\n\tvar screenfull = {\n\t\trequest: function (element, options) {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tvar onFullScreenEntered = function () {\n\t\t\t\t\tthis.off('change', onFullScreenEntered);\n\t\t\t\t\tresolve();\n\t\t\t\t}.bind(this);\n\n\t\t\t\tthis.on('change', onFullScreenEntered);\n\n\t\t\t\telement = element || document.documentElement;\n\n\t\t\t\tvar returnPromise = element[fn.requestFullscreen](options);\n\n\t\t\t\tif (returnPromise instanceof Promise) {\n\t\t\t\t\treturnPromise.then(onFullScreenEntered).catch(reject);\n\t\t\t\t}\n\t\t\t}.bind(this));\n\t\t},\n\t\texit: function () {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tif (!this.isFullscreen) {\n\t\t\t\t\tresolve();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar onFullScreenExit = function () {\n\t\t\t\t\tthis.off('change', onFullScreenExit);\n\t\t\t\t\tresolve();\n\t\t\t\t}.bind(this);\n\n\t\t\t\tthis.on('change', onFullScreenExit);\n\n\t\t\t\tvar returnPromise = document[fn.exitFullscreen]();\n\n\t\t\t\tif (returnPromise instanceof Promise) {\n\t\t\t\t\treturnPromise.then(onFullScreenExit).catch(reject);\n\t\t\t\t}\n\t\t\t}.bind(this));\n\t\t},\n\t\ttoggle: function (element, options) {\n\t\t\treturn this.isFullscreen ? this.exit() : this.request(element, options);\n\t\t},\n\t\tonchange: function (callback) {\n\t\t\tthis.on('change', callback);\n\t\t},\n\t\tonerror: function (callback) {\n\t\t\tthis.on('error', callback);\n\t\t},\n\t\ton: function (event, callback) {\n\t\t\tvar eventName = eventNameMap[event];\n\t\t\tif (eventName) {\n\t\t\t\tdocument.addEventListener(eventName, callback, false);\n\t\t\t}\n\t\t},\n\t\toff: function (event, callback) {\n\t\t\tvar eventName = eventNameMap[event];\n\t\t\tif (eventName) {\n\t\t\t\tdocument.removeEventListener(eventName, callback, false);\n\t\t\t}\n\t\t},\n\t\traw: fn\n\t};\n\n\tif (!fn) {\n\t\tif (isCommonjs) {\n\t\t\tmodule.exports = {isEnabled: false};\n\t\t} else {\n\t\t\twindow.screenfull = {isEnabled: false};\n\t\t}\n\n\t\treturn;\n\t}\n\n\tObject.defineProperties(screenfull, {\n\t\tisFullscreen: {\n\t\t\tget: function () {\n\t\t\t\treturn Boolean(document[fn.fullscreenElement]);\n\t\t\t}\n\t\t},\n\t\telement: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn document[fn.fullscreenElement];\n\t\t\t}\n\t\t},\n\t\tisEnabled: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\t// Coerce to boolean in case of old WebKit\n\t\t\t\treturn Boolean(document[fn.fullscreenEnabled]);\n\t\t\t}\n\t\t}\n\t});\n\n\tif (isCommonjs) {\n\t\tmodule.exports = screenfull;\n\t} else {\n\t\twindow.screenfull = screenfull;\n\t}\n})();\n","import { Component, h } from 'preact'\nimport { ImageWithRatio } from './start'\nimport { Tile, TileProps } from './tile'\nimport { searchSolution } from './layout'\nimport * as screenfull from 'screenfull'\nimport './diorama.css'\n\nexport interface DioramaProps {\n  images: ImageWithRatio[]\n}\n\nexport interface DioramaState {\n  showCrop: boolean\n  tileProps?: TileProps[]\n  images: number\n}\n\nexport class Diorama extends Component<DioramaProps, DioramaState> {\n  resizing = false\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      showCrop: false,\n      tileProps: [],\n      images: 9\n    }\n  }\n\n  componentDidMount() {\n    this.calculatePositions()\n    window.addEventListener('resize', () => this.calculatePositions())\n  }\n\n  calculatePositions() {\n    if (this.resizing) {\n      return\n    }\n    const base = this.base as Element\n    this.resizing = true\n    let w = base.clientWidth,\n      h = base.clientHeight,\n      tiles = this.props.images.slice(0, this.state.images),\n      positions = []\n    do {\n      positions = searchSolution(\n        w,\n        h,\n        tiles.map(tile => tile.aspectRatio),\n        100\n      )\n    } while (!positions)\n    requestAnimationFrame(() => {\n      this.setState({\n        tileProps: positions\n          .sort((a, b) => a.index - b.index)\n          .map(p => ({\n            src: this.props.images[p.index].src,\n            aspectRatio: this.props.images[p.index].aspectRatio,\n            top: p.y,\n            left: p.x,\n            width: p.width,\n            height: p.height\n          }))\n      })\n      this.resizing = false\n      this.forceUpdate()\n    })\n  }\n\n  shouldComponentUpdate() {\n    return false\n  }\n\n  crop = () => {\n    this.setState({ showCrop: !this.state.showCrop })\n    this.forceUpdate()\n  }\n\n  recalc = () => {\n    this.calculatePositions()\n  }\n\n  add = () => {\n    this.setState({ images: Math.min(this.props.images.length, this.state.images + 1) })\n    this.calculatePositions()\n  }\n\n  remove = () => {\n    this.setState({ images: Math.max(5, this.state.images - 1) })\n    this.calculatePositions()\n  }\n\n  render(props, { tileProps, showCrop, images, ...state }) {\n    return (\n      <div className={`diorama ${showCrop ? 'crop' : ''}`}>\n        <ul>\n          {tileProps.map(props => (\n            <Tile {...props} />\n          ))}\n        </ul>\n        <nav>\n          <button class=\"calc\" onClick={() => this.recalc()}>\n            Recalculate\n          </button>\n          <button class=\"crop-toggle\" onClick={() => this.crop()}>\n            Show crop\n          </button>\n          <button\n            class=\"fullscreen\"\n            onClick={() => {\n              if (screenfull.isEnabled) {\n                screenfull.request()\n              }\n            }}\n          >\n            Fullscreen\n          </button>\n          <button class=\"add-image\" onClick={() => this.add()}>\n            Add\n          </button>\n          <button class=\"del-image\" onClick={() => this.remove()}>\n            Remove\n          </button>\n        </nav>\n      </div>\n    )\n  }\n}\n","import { images } from './images'\nimport { h, render } from 'preact'\nimport { Diorama } from './diorama'\n\nconst domReady = (): Promise<Event> =>\n  new Promise(resolve => {\n    document.addEventListener('DOMContentLoaded', resolve)\n  })\n\nexport interface ImageWithRatio {\n  src: string\n  aspectRatio: number\n}\n\nconst imageLoader = (src: string): Promise<ImageWithRatio> =>\n  new Promise<ImageWithRatio>(resolve => {\n    const img = new Image()\n    img.addEventListener('load', () => resolve({ src, aspectRatio: img.width / img.height }))\n    img.src = src\n  })\n\n;(async () => {\n  const [, ...imgWithRatios] = await Promise.all([domReady as any, ...images.map(imageLoader)])\n  render(<Diorama images={imgWithRatios} />, document.body)\n})()\n"],"names":["slice","options","vnodeId","rerenderQueue","defer","prevDebounce","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","assign","obj","props","i","removeNode","node","parentNode","removeChild","createVNode","type","key","ref","original","vnode","__","__b","__e","__d","undefined","__h","constructor","Fragment","children","Component","context","getDomSibling","childIndex","indexOf","sibling","length","updateParentDomPointers","child","base","enqueueRender","c","push","process","debounceRendering","queue","sort","a","b","some","component","commitQueue","oldVNode","oldDom","parentDom","diff","ownerSVGElement","commitRoot","diffChildren","renderResult","newParentVNode","oldParentVNode","globalContext","isSvg","excessDomChildren","isHydrating","j","childVNode","newDom","firstChildDom","refs","oldChildren","oldChildrenLength","Array","isArray","reorderChildren","placeChild","value","unmount","applyRef","tmp","nextDom","sibDom","outer","appendChild","nextSibling","insertBefore","setStyle","style","setProperty","test","dom","name","oldValue","useCapture","o","cssText","toLowerCase","replace","_listeners","addEventListener","eventProxyCapture","eventProxy","removeEventListener","e","setAttribute","removeAttribute","event","newVNode","isNew","oldProps","oldState","snapshot","clearProcessingException","newProps","provider","componentContext","newType","contextType","prototype","render","doRender","sub","state","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","oldHtml","newHtml","nodeType","localName","document","createTextNode","createElementNS","createElement","is","data","call","childNodes","dangerouslySetInnerHTML","attributes","innerHTML","hydrate","diffProps","checked","diffElementNodes","diffed","root","cb","current","parentVNode","skipRemove","r","componentWillUnmount","replaceNode","normalizedProps","arguments","defaultProps","firstChild","error","ctor","handled","getDerivedStateFromError","setState","componentDidCatch","update","callback","s","this","forceUpdate","Promise","then","bind","resolve","setTimeout","__source","__self","$e22b0404bf806bf4$export$b141921bc3b98760","$c2643fbc0c9d57da$export$4cbd7057afcc19d","$40c0f35afcbeb548$export$ea71c44d9cb0d048","src","aspectRatio","top","left","width","height","backgroundImage","$832a2dde60d29c88$var$arrayReplaceIn","target","$832a2dde60d29c88$var$shuffleSlice","arr","start","end","shuffled","array","temporaryValue","randomIndex","currentIndex","floor","Math","rnd","random","$832a2dde60d29c88$var$shuffle","$832a2dde60d29c88$var$calculateSizes","nodes","splits","nextPower","minmax","n1","n2","parent","d","minFn","min","maxFn","max","x","y","d1","d2","dummy","$832a2dde60d29c88$export$13f6845f2b5b56bd","aspectRatios","searchTime","BIG","currentDifference","winner","arrayHalf","wider","a1","a2","l","last","targetRatio","v","fullArray","len","apply","map","splitCache","endTime","Date","getTime","previousMinScore","minAspectRatioThreshold","idx","index","now","ceil","score","filter","n","scaleX","scaleY","window","isCommonjs","$937f7305f5ac067d$exports","fn","val","fnMap","ret","eventNameMap","change","fullscreenchange","fullscreenerror","screenfull","request","element","reject","onFullScreenEntered","off","on","returnPromise","documentElement","requestFullscreen","catch","exit","isFullscreen","onFullScreenExit","exitFullscreen","toggle","onchange","onerror","eventName","raw","Object","defineProperties","get","Boolean","fullscreenElement","enumerable","isEnabled","fullscreenEnabled","$010f9d07c0382c50$export$fdfd97831bc882b2","props1","super","resizing","crop","showCrop","recalc","calculatePositions","add","images","remove","tileProps","w","clientWidth","h","clientHeight","tiles","positions","tile","requestAnimationFrame","p","className","props2","$0bbb9dd8d5419e08$export$e9196f6cbe4a9631","class","onClick","$8b4ad083fb84d502$var$domReady","$8b4ad083fb84d502$var$imageLoader","img","Image","imgWithRatios","all","$40c0f35afcbeb548$export$792a797b69be0d58","body"],"version":3,"file":"index.6730974c.js.map"}